#!/bin/sh
#******************************************************************************
# (C) Copyright 2020-2022 Real-Time Innovations, Inc.  All rights reserved.
#
# The use of this software is governed by the terms specified in the 
# RTI Labs License Agreement, available at https://www.rti.com/terms/RTILabs. 
#
# By accessing, downloading, or otherwise using this software, you agree to 
# be bound by those terms.
#*****************************************************************************
# 
# Emulate all the components of the Drive service using
# rtiddsprototyper with Lua to write dummy data.
#
# USAGE:
#     drive
#*****************************************************************************

if [ "${NDDSHOME}" = "" ]; then echo "NDDSHOME Undefined!" ; exit 1; fi

# --- Project Directory ---
DATABUSHOME=$(cd $(dirname "$0")/..; pwd -P)

# Initialize environment
. $DATABUSHOME/res/cfg/Drive_QOS_PROVIDER.sh

# Change working directory to the project directory 
cd $DATABUSHOME

# Service Components to launch
COMPONENTS=""
COMPONENTS+=" Sensing_svc::Camera " 
COMPONENTS+=" Sensing_svc::Lidar "
COMPONENTS+=" Perception_svc::Perceptor " 
COMPONENTS+=" Planning_svc::Planner "
COMPONENTS+=" Actuation_svc::Actuator "
COMPONENTS+=" HMI_svc::HMI "
COMPONENTS+=" CAN_svc::CANGateway "
COMPONENTS+=" CAN_svc::CANComponent "
COMPONENTS+=" CAN_svc::CANTunnel "

echo "COMPONENTS = $COMPONENTS"

# Launch the components emulated using Lua
i=0
for component in ${COMPONENTS} 
do
    echo "$component"
    $NDDSHOME/bin/rtiddsprototyper -luaOnData 0 -luaFile src/utils/Publisher.lua -cfgName $component &
    COMPONENT_PID[$i]=$!
    echo "   PID = ${COMPONENT_PID[$i]}"
    i=$((i+1))
done

# wait for the user to terminate this shell process
while :
do
    sleep 1
done

# Kill the components
trap "{
i=0
for component in ${COMPONENTS} 
do
    echo "Killing: $component, PID = ${COMPONENT_PID[$i]}"
    kill -9 ${COMPONENT_PID[$i]}
    i=$((i+1))
done
}" EXIT
