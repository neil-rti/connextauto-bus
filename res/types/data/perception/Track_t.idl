/******************************************************************************
(C) Copyright 2020-2022 Real-Time Innovations, Inc.  All rights reserved.

The use of this software is governed by the terms specified in the 
RTI Labs License Agreement, available at https://www.rti.com/terms/RTILabs. 

By accessing, downloading, or otherwise using this software, you agree to 
be bound by those terms.
*****************************************************************************/

#ifndef TRACK_IDL
#define TRACK_IDL

#include "res/types/data/base/Entity_t.idl"
#include "res/types/data/physics/Point2D_t.idl"

module dds {
    module perception {
       
        /**
        * Track Definition - base structure of tracks 
        */
        struct Track : base::Entity  {
            @optional
            physics::Point2D_integer position;

            @optional
            physics::Point2D_integer velocity;

            @optional
            physics::Point2D_integer acceleration;
        };


        /**
        * TrackInfo - descriptive information about tracks
        */
        struct TrackInfo : base::EntityInfo {
            @optional
            physics::Point2D_real position_scale;

            @optional
            physics::Point2D_real velocity_scale;

            @optional
            physics::Point2D_real acceleration_scale;
        };


        /**
        * TrackKind - valid values for Track::id[base::KIND]
        */
        enum TrackKind {
            TRACK_UNKNOWN,
            TRACK_PEDESTRIAN,
            TRACK_BIKE,
            TRACK_CAR,
            TRACK_TRUCK,
            TRACK_BARRIER
        };

    };
};

#endif /* TRACK_IDL */
